memory[0] = 32'h34090000;	//	main:	ori	$t1, $zero, 0
			001101 00000 01001 0000 0000 0000 0000
			  ori   rs = 0     | ----- 0 --------|
                              rt = 9  
				  =>Reg[rt]=Reg[9] = Reg[0] or 0 = 0

memory[1] = 32'h2012001d;	//		addi	$s2, $zero, 29
			001000 00000 10010 0000 0000 0001 1101
			  addi   rs = 0    | ----- 29 -------|
                              rt = 18  
				  =>Reg[rt]=Reg[18] = Reg[0]+ 29 = 29


memory[2] = 32'h2013000c;	//		addi	$s3, $zero, 12
			001000 00000 10011 0000 0000 0000 1100
			addi   rs = 0      | ----- 12 -------|
					  rt = 19  
				  =>Reg[rt]=Reg[19] = Reg[0]+ 12 = 12


memory[3] = 32'had320004;	//		sw	$s2, 4($t1)
			101011 01001 10010 0000 0000 0000 0100
			  sw    rs = 9	   | ----- 4 -------|
					    rt = 18
			Reg[rt] = Reg[18] = 29 is stored into
			DataMemory[Reg[rs] + 4] = DataMemory[4] 


memory[4] = 32'had330008;	//		sw	$s3, 8($t1)
			101011 01001 10011 0000 0000 0000 1000
			  sw    rs = 9	   | ----- 8 -------|
					    rt = 19
			Reg[rt] = Reg[19] = 12 is stored into
			DataMemory[Reg[rs] + 8] = DataMemory[8] 


memory[5] = 32'h8d280004;	//		lw	$t0, 4($t1)
			100011 01001 01000 0000 0000 0000 0100
			   lw   rs = 9
					    rt = 8  
			Reg[rt]=Reg[8] get data from 
			   DataMemory[0 + 4] = DataMemory[4] = 29 


memory[6] = 32'h8d280008;	//		lw	$t0, 8($t1)
			100011 01001 01000 0000 0000 0000 1000
			   lw   rs = 9
					    rt = 8  
			Reg[rt]=Reg[8] get data from 
			   DataMemory[0 + 8] = DataMemory[8] = 12 

memory[7] = 32'h15120002;	//		bne	$t0, $s2, label1
			000101 01000 10010 0000 0000 0000 0010
			  bne   rs = 8  
					    rt = 18
			if(Reg[rs] = 12 != Reg[rt] = 29) -> branch
			PC = PC + 4 + 4*offset = PC = PCAddResult+ 8 

memory[8] = 32'h00004020;	//		add	$t0, $zero, $zero
memory[9] = 32'h2008000c;	//		addi	$t0, $zero, 12

memory[10] = 32'h15130001;	//	label1:	bne	$t0, $s3, label2
			000101 01000 10011 0000 0000 0000 0001
			  bne   rs = 8  
					    rt = 19
			if(Reg[rs] = 12 != Reg[rt] = 12) -> NOT branch
			PC = PC + 4  => PCSrc = 0 

memory[11] = 32'h20080001;	//		addi	$t0, $zero, 1
memory[12] = 32'h2008001d;	//	label2:	addi	$t0, $zero, 29
